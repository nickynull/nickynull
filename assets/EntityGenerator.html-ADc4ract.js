import{_ as T,f as o,o as E,c as O,a as l,g as n,h as u,d as U}from"./app-94JDwXbh.js";const D=l("h1",{id:"简单实体对象生成器",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#简单实体对象生成器","aria-hidden":"true"},"#"),U(" 简单实体对象生成器")],-1),N={class:"line-block"},M={class:"line-block"},G=l("span",{class:"line-label"},"实体类名",-1),R={class:"line-block"},B=l("span",{class:"line-label"},"实体描述",-1),L={class:"line-block"},S=l("span",{class:"line-label"},"实体表名",-1),A={class:"line-block"},z={class:"line-block"},I={__name:"EntityGenerator.html",setup(Q){const c=o(""),h=o(""),w=o(""),a=o(""),v=o(""),m=o(""),y=o(""),b=o("");function g(e,t){return e&&e.length>t?e[t]:""}function k(){if(!a.value)return;let e=[],t=a.value.split(`
`),s=v.value.split(`
`),$=m.value.split(`
`);const p=c.value||"TempObject",r=h.value,f=w.value;e.push("/// <summary>"),e.push(`/// ${r}`),e.push("/// </summary>"),e.push(`[Label("${r}")]`),e.push("[RootEntity, Serializable]"),e.push(`public class ${p} : DataEntity`),e.push("{");for(let i=0;i<t.length;i++){const d=g(t,i),V=g(s,i),C=g($,i)||"string";e.push(`	#region ${V} ${d}`),e.push("	/// <summary>"),e.push(`	/// ${V}`),e.push("	/// </summary>"),e.push(`	[Label("${V}")]`),e.push(`	public static readonly Property<${C}> ${d}Property = P<${p}>.Register(e => e.${d});`),e.push("	/// <summary>"),e.push(`	/// ${V}`),e.push("	/// </summary>"),e.push(`	public ${C} ${d}`),e.push("	{"),e.push(`		get { return this.GetProperty(${d}Property); }`),e.push(`		set { this.SetProperty(${d}Property, value); }`),e.push("	}"),e.push("	#endregion"),e.push("")}return e.splice(e.length-1,1),e.push("}"),e.push(""),e.push("/// <summary>"),e.push(`/// ${r} 实体配置`),e.push("/// </summary>"),e.push(`internal class ${p}Config : EntityConfig<${p}>`),e.push("{"),e.push("	/// <summary>"),e.push("	/// 元数据配置"),e.push("	/// </summary>"),e.push("	protected override void ConfigMeta()"),e.push("	{"),e.push(`		Meta.MapTable("${f}").MapAllProperties();`),e.push("	}"),e.push("}"),e.join(`
`)}function _(){if(!a.value)return;let e=[],t=a.value.split(`
`);v.value.split(`
`),m.value.split(`
`);const s=["	protected override void ConfigView() {}","	protected override void ConfigListView()","	protected override void ConfigDetailsView()","	protected override void ConfigQueryView()","	protected override void ConfigSelectionView() {}","	protected override void ConfigImportView() {}"],$=c.value||"TempObject",p=h.value;e.push("/// <summary>"),e.push(`/// ${p} 视图`),e.push("/// </summary>"),e.push(`class ${$}ViewConfig : WebViewConfig<${$}>`),e.push("{");for(let r of s){if(e.push(r),r.indexOf("{}")==-1){e.push("	{");for(let f=0;f<t.length;f++){const i=g(t,f);e.push(`		View.Property(p => p.${i});`)}e.push("	}")}e.push("")}return e.splice(e.length-1,1),e.push("}"),e.join(`
`)}function P(){y.value=k(),b.value=_(),window.$alert("运行完毕")}function x(e,t){window.$copy(e,t)}function j(){c.value="",h.value="",a.value="",v.value="",m.value="",y.value="",b.value="",window.$alert("清空完毕")}return(e,t)=>(E(),O("div",null,[D,l("div",N,[l("button",{onClick:P},"运行"),l("button",{onClick:t[0]||(t[0]=s=>x(y.value,"实体"))},"复制实体"),l("button",{onClick:t[1]||(t[1]=s=>x(b.value,"视图"))},"复制视图"),l("button",{onClick:j},"清空")]),l("div",M,[G,n(l("input",{class:"line-content","onUpdate:modelValue":t[2]||(t[2]=s=>c.value=s)},null,512),[[u,c.value]])]),l("div",R,[B,n(l("input",{class:"line-content","onUpdate:modelValue":t[3]||(t[3]=s=>h.value=s)},null,512),[[u,h.value]])]),l("div",L,[S,n(l("input",{class:"line-content","onUpdate:modelValue":t[4]||(t[4]=s=>w.value=s)},null,512),[[u,w.value]])]),l("div",A,[n(l("textarea",{"onUpdate:modelValue":t[5]||(t[5]=s=>a.value=s),class:"text line-huge",placeholder:"属性名，多个时换行"},null,512),[[u,a.value]]),n(l("textarea",{"onUpdate:modelValue":t[6]||(t[6]=s=>v.value=s),class:"text line-huge",placeholder:"属性描述，多个时换行"},null,512),[[u,v.value]]),n(l("textarea",{"onUpdate:modelValue":t[7]||(t[7]=s=>m.value=s),class:"text line-huge",placeholder:"属性类型，多个时换行，不输入时默认string"},null,512),[[u,m.value]])]),l("div",z,[n(l("textarea",{"onUpdate:modelValue":t[8]||(t[8]=s=>y.value=s),class:"text line-huge",placeholder:"实体",readonly:"",style:{height:"25vh"}},null,512),[[u,y.value]]),n(l("textarea",{"onUpdate:modelValue":t[9]||(t[9]=s=>b.value=s),class:"text line-huge",placeholder:"视图",readonly:"",style:{height:"25vh"}},null,512),[[u,b.value]])])]))}},q=T(I,[["__file","EntityGenerator.html.vue"]]);export{q as default};
